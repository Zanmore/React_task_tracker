{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","protoTypes","PropTypes","string","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0652b05c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n    <button onClick = { onClick } style={{ backgroundColor: color }} className=\"btn\">\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button;\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button color= {showAdd ? 'red' : 'green'} \n            text= {showAdd ? 'Close' : 'Add'} onClick = {onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title : 'Task Tracker',\n}\n\nHeader.protoTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color:'red', \n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''} `} onDoubleClick = {() => onToggle(task.id)}>\n      <h3>\n        {task.text}\n        <FaTimes \n        style={{color:'red', cursor: 'pointer'}} \n        onClick={() => onDelete(task.id)}\n         />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} \n        task={task} \n        onDelete = {onDelete}\n        onToggle = {onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n      e.preventDefault()\n\n      if(!text) {\n          alert ('Please add a task')\n          return\n      }\n\n      onAdd({ text, day, reminder })\n\n      setText('')\n      setDay('')\n      setReminder(false)\n\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"task\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"task\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked = {reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appt\",\n      day: \"Feb 5th at 2:30\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 3:30\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"Feb 5th at 2:30\",\n      reminder: false,\n    },\n  ]);\n\n// Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder } : task));\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd= {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks \n        tasks={tasks} \n        onDelete={deleteTask} \n        onToggle = {toggleReminder} />\n      ) : (\n        \"No Tasks to Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}